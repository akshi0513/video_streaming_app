{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\video streaming App\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { addComment } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentSection = ({\n  videoId\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const [comments, setComments] = useState([]);\n  const handleAddComment = async e => {\n    e.preventDefault();\n    try {\n      const response = await addComment(videoId, text);\n      setComments([...comments, response.data]); // Add new comment to the list\n      setText(''); // Clear the input field\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error adding comment:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment.text\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddComment,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentSection, \"6fDjj/7LtNUriAkjJ8J4NirJTYI=\");\n_c = CommentSection;\nexport default CommentSection;\nvar _c;\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"names":["useState","addComment","jsxDEV","_jsxDEV","CommentSection","videoId","_s","text","setText","comments","setComments","handleAddComment","e","preventDefault","response","data","error","_error$response","_error$response$data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","comment","_id","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/components/CommentSection.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { addComment } from '../api';\r\n\r\nconst CommentSection = ({ videoId }) => {\r\n  const [text, setText] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const handleAddComment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await addComment(videoId, text);\r\n      setComments([...comments, response.data]); // Add new comment to the list\r\n      setText(''); // Clear the input field\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error.response?.data?.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Comments</h3>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment._id}>{comment.text}</li>\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={handleAddComment}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a comment...\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Comment</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n    "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,UAAU,CAACI,OAAO,EAAEE,IAAI,CAAC;MAChDG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC3CP,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdC,OAAO,CAACH,KAAK,CAAC,uBAAuB,GAAAC,eAAA,GAAED,KAAK,CAACF,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,CAAC;IACrE;EACF,CAAC;EAED,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBrB,OAAA;MAAAiB,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAAEC,OAAO,iBACpBvB,OAAA;QAAAiB,QAAA,EAAuBM,OAAO,CAACnB;MAAI,GAA1BmB,OAAO,CAACC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLrB,OAAA;MAAMyB,QAAQ,EAAEjB,gBAAiB;MAAAS,QAAA,gBAC/BjB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAExB,IAAK;QACZyB,QAAQ,EAAGpB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFrB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlCIF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}