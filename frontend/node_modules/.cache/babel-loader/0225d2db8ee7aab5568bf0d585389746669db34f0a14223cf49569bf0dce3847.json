{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\video streaming App\\\\frontend\\\\src\\\\components\\\\VideoUpload.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { uploadVideo } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    tags: ''\n  });\n  const [loading, setLoading] = useState(false); // Loading state for upload\n  const [error, setError] = useState(null); // Error state for handling errors\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n\n    // Check file size before uploading\n    if (file.size > 100 * 1024 * 1024) {\n      // 100MB limit\n      alert('File size exceeds the 100MB limit.');\n      return;\n    }\n    setLoading(true); // Start the loading state\n    setError(null); // Clear any previous errors\n\n    const formData = new FormData();\n    formData.append('video', file); // Video field must match the backend field name\n    formData.append('title', form.title);\n    formData.append('description', form.description);\n    formData.append('tags', form.tags);\n\n    // Debugging: Log FormData entries\n    console.log('FormData before upload:', [...formData.entries()]);\n    try {\n      await uploadVideo(formData); // Call the API function to upload video\n      alert('Video uploaded successfully!');\n\n      // Clear the form and file after successful upload\n      setForm({\n        title: '',\n        description: '',\n        tags: ''\n      });\n      setFile(null);\n      document.getElementById('fileInput').value = ''; // Reset file input\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading video:', error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n        setError(error.response.data.error); // Use the backend's error message if available\n      } else {\n        setError('Failed to upload video. Please try again.');\n      }\n    } finally {\n      setLoading(false); // Stop the loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading... Please wait.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: form.title // Display current title value\n        ,\n        onChange: e => setForm({\n          ...form,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: form.description // Display current description value\n        ,\n        onChange: e => setForm({\n          ...form,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tags (comma separated)\",\n        value: form.tags // Display current tags value\n        ,\n        onChange: e => setForm({\n          ...form,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: e => setFile(e.target.files[0]) // Capture the selected file\n        ,\n        disabled: loading // Disable input during upload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoUpload, \"BR21Zp0feVxmqOTWgVzxKh+VwsQ=\");\n_c = VideoUpload;\nexport default VideoUpload;\nvar _c;\n$RefreshReg$(_c, \"VideoUpload\");","map":{"version":3,"names":["useState","uploadVideo","jsxDEV","_jsxDEV","VideoUpload","_s","file","setFile","form","setForm","title","description","tags","loading","setLoading","error","setError","handleUpload","e","preventDefault","alert","size","formData","FormData","append","console","log","entries","document","getElementById","value","_error$response","_error$response$data","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","onChange","target","id","accept","files","disabled","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/components/VideoUpload.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { uploadVideo } from '../api';\r\n\r\nconst VideoUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [form, setForm] = useState({ title: '', description: '', tags: '' });\r\n  const [loading, setLoading] = useState(false); // Loading state for upload\r\n  const [error, setError] = useState(null);     // Error state for handling errors\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!file) {\r\n      alert('Please select a file.');\r\n      return;\r\n    }\r\n\r\n    // Check file size before uploading\r\n    if (file.size > 100 * 1024 * 1024) { // 100MB limit\r\n      alert('File size exceeds the 100MB limit.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);  // Start the loading state\r\n    setError(null);    // Clear any previous errors\r\n\r\n    const formData = new FormData();\r\n    formData.append('video', file); // Video field must match the backend field name\r\n    formData.append('title', form.title);\r\n    formData.append('description', form.description);\r\n    formData.append('tags', form.tags);\r\n\r\n    // Debugging: Log FormData entries\r\n    console.log('FormData before upload:', [...formData.entries()]);\r\n\r\n    try {\r\n      await uploadVideo(formData); // Call the API function to upload video\r\n      alert('Video uploaded successfully!');\r\n      \r\n      // Clear the form and file after successful upload\r\n      setForm({ title: '', description: '', tags: '' });\r\n      setFile(null);\r\n      document.getElementById('fileInput').value = ''; // Reset file input\r\n    } catch (error) {\r\n      console.error('Error uploading video:', error);\r\n      if (error.response?.data?.error) {\r\n        setError(error.response.data.error); // Use the backend's error message if available\r\n      } else {\r\n        setError('Failed to upload video. Please try again.');\r\n      }\r\n    } finally {\r\n      setLoading(false);  // Stop the loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Video</h2>\r\n      {loading && <p>Uploading... Please wait.</p>} {/* Display loading message */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n      <form onSubmit={handleUpload}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Title\" \r\n          value={form.title} // Display current title value\r\n          onChange={(e) => setForm({ ...form, title: e.target.value })} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Description\" \r\n          value={form.description} // Display current description value\r\n          onChange={(e) => setForm({ ...form, description: e.target.value })} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Tags (comma separated)\" \r\n          value={form.tags} // Display current tags value\r\n          onChange={(e) => setForm({ ...form, tags: e.target.value })} \r\n        />\r\n        <input \r\n          id=\"fileInput\" \r\n          type=\"file\" \r\n          accept=\"video/*\" \r\n          onChange={(e) => setFile(e.target.files[0])} // Capture the selected file\r\n          disabled={loading} // Disable input during upload\r\n        />\r\n        <button type=\"submit\" disabled={loading}>Upload</button> {/* Disable button during upload */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}