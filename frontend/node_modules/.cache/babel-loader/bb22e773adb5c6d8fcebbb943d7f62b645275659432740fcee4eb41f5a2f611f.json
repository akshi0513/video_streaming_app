{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\video streaming App\\\\frontend\\\\src\\\\components\\\\CommentSection.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { addComment, likeComment, dislikeComment, getComments } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  videoId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      const response = await getComments(videoId);\n      setComments(response.data);\n    };\n    fetchComments();\n  }, [videoId]);\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n    const response = await addComment(videoId, newComment);\n    setComments([...comments, response.data]);\n    setNewComment('');\n  };\n  const handleLike = async commentId => {\n    await likeComment(commentId);\n    const updatedComments = comments.map(comment => comment._id === commentId ? {\n      ...comment,\n      likes: comment.likes + 1\n    } : comment);\n    setComments(updatedComments);\n  };\n  const handleDislike = async commentId => {\n    await dislikeComment(commentId);\n    const updatedComments = comments.map(comment => comment._id === commentId ? {\n      ...comment,\n      dislikes: comment.dislikes + 1\n    } : comment);\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [comment.likes, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLike(comment._id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [comment.dislikes, \" Dislikes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDislike(comment._id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","addComment","likeComment","dislikeComment","getComments","jsxDEV","_jsxDEV","Comments","videoId","_s","comments","setComments","newComment","setNewComment","fetchComments","response","data","handleAddComment","trim","handleLike","commentId","updatedComments","map","comment","_id","likes","handleDislike","dislikes","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/components/CommentSection.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { addComment, likeComment, dislikeComment, getComments } from '../api';\r\n\r\nconst Comments = ({ videoId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      const response = await getComments(videoId);\r\n      setComments(response.data);\r\n    };\r\n\r\n    fetchComments();\r\n  }, [videoId]);\r\n\r\n  const handleAddComment = async () => {\r\n    if (!newComment.trim()) return;\r\n\r\n    const response = await addComment(videoId, newComment);\r\n    setComments([...comments, response.data]);\r\n    setNewComment('');\r\n  };\r\n\r\n  const handleLike = async (commentId) => {\r\n    await likeComment(commentId);\r\n    const updatedComments = comments.map((comment) =>\r\n      comment._id === commentId ? { ...comment, likes: comment.likes + 1 } : comment\r\n    );\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  const handleDislike = async (commentId) => {\r\n    await dislikeComment(commentId);\r\n    const updatedComments = comments.map((comment) =>\r\n      comment._id === commentId ? { ...comment, dislikes: comment.dislikes + 1 } : comment\r\n    );\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Comments</h3>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment._id}>\r\n            <p>{comment.comment}</p>\r\n            <div>\r\n              <span>{comment.likes} Likes</span>\r\n              <button onClick={() => handleLike(comment._id)}>Like</button>\r\n              <span>{comment.dislikes} Dislikes</span>\r\n              <button onClick={() => handleDislike(comment._id)}>Dislike</button>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <textarea\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          placeholder=\"Add a comment...\"\r\n        />\r\n        <button onClick={handleAddComment}>Comment</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}