{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\video streaming App\\\\frontend\\\\src\\\\components\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { streamVideo } from '../api'; // Assuming this function returns the URL for streaming\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [videoSrc, setVideoSrc] = useState(null); // For storing the video URL\n  const [loading, setLoading] = useState(true); // For handling loading state\n  const [error, setError] = useState(null); // For handling errors\n\n  // Fetch video source when the component mounts\n  useEffect(() => {\n    const fetchVideo = async () => {\n      try {\n        const src = await streamVideo(id); // Fetch the video URL from the backend\n        setVideoSrc(src); // Set the video source URL\n        setLoading(false); // Set loading to false after the video URL is fetched\n      } catch (err) {\n        console.error('Error fetching video:', err);\n        setError('Failed to load video. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchVideo();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading video...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this); // Display loading message\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this); // Display error message if video loading fails\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), videoSrc ? /*#__PURE__*/_jsxDEV(\"video\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: videoSrc,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Video not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"RfBnsub81szZyuI9Cpkl7eEcNmo=\", false, function () {\n  return [useParams];\n});\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useState","useEffect","useParams","streamVideo","jsxDEV","_jsxDEV","VideoPlayer","_s","id","videoSrc","setVideoSrc","loading","setLoading","error","setError","fetchVideo","src","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","type","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/components/VideoPlayer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { streamVideo } from '../api'; // Assuming this function returns the URL for streaming\r\n\r\nconst VideoPlayer = () => {\r\n  const { id } = useParams();\r\n  const [videoSrc, setVideoSrc] = useState(null); // For storing the video URL\r\n  const [loading, setLoading] = useState(true);   // For handling loading state\r\n  const [error, setError] = useState(null);       // For handling errors\r\n\r\n  // Fetch video source when the component mounts\r\n  useEffect(() => {\r\n    const fetchVideo = async () => {\r\n      try {\r\n        const src = await streamVideo(id); // Fetch the video URL from the backend\r\n        setVideoSrc(src);                  // Set the video source URL\r\n        setLoading(false);                 // Set loading to false after the video URL is fetched\r\n      } catch (err) {\r\n        console.error('Error fetching video:', err);\r\n        setError('Failed to load video. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchVideo();\r\n  }, [id]);\r\n\r\n  if (loading) {\r\n    return <p>Loading video...</p>; // Display loading message\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>; // Display error message if video loading fails\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Video Player</h2>\r\n      {videoSrc ? (\r\n        <video controls>\r\n          <source src={videoSrc} type=\"video/mp4\" />\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      ) : (\r\n        <p>Video not found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAG;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAO;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMb,WAAW,CAACK,EAAE,CAAC,CAAC,CAAC;QACnCE,WAAW,CAACM,GAAG,CAAC,CAAC,CAAkB;QACnCJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAiB;MACrC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZC,OAAO,CAACL,KAAK,CAAC,uBAAuB,EAAEI,GAAG,CAAC;QAC3CH,QAAQ,CAAC,+CAA+C,CAAC;QACzDF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAClC;EAEA,IAAIV,KAAK,EAAE;IACT,oBAAOR,OAAA;MAAAc,QAAA,EAAIN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC,CAAC;EACzB;EAEA,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBd,QAAQ,gBACPJ,OAAA;MAAOmB,QAAQ;MAAAL,QAAA,gBACbd,OAAA;QAAQW,GAAG,EAAEP,QAAS;QAACgB,IAAI,EAAC;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAE5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,gBAERlB,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5CID,WAAW;EAAA,QACAJ,SAAS;AAAA;AAAAwB,EAAA,GADpBpB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}