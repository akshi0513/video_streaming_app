{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:9002';\n\n// Axios instance for authenticated requests\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Include token in requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport const login = (email, password) => api.post('/api/auth/login', {\n  email,\n  password\n});\nexport const register = (username, email, password) => api.post('/api/auth/register', {\n  username,\n  email,\n  password\n});\nexport const uploadVideo = formData => api.post('/api/videos/upload', formData);\nexport const fetchVideos = (search, page) => api.get(`/api/videos?search=${search}&page=${page}`);\nexport const streamVideo = id => `${API_URL}/api/videos/stream/${id}`;\nexport const addComment = (videoId, text) => api.post('/api/comments/comment', {\n  videoId,\n  text\n});","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","email","password","post","register","username","uploadVideo","formData","fetchVideos","search","page","get","streamVideo","id","addComment","videoId","text"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:9002';\r\n\r\n// Axios instance for authenticated requests\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Include token in requests\r\napi.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\nexport const login = (email, password) => api.post('/api/auth/login', { email, password });\r\nexport const register = (username, email, password) => api.post('/api/auth/register', { username, email, password });\r\nexport const uploadVideo = (formData) => api.post('/api/videos/upload', formData);\r\nexport const fetchVideos = (search, page) => api.get(`/api/videos?search=${search}&page=${page}`);\r\nexport const streamVideo = (id) => `${API_URL}/api/videos/stream/${id}`;\r\nexport const addComment = (videoId, text) => api.post('/api/comments/comment', { videoId, text });\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAED,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAC3D,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAKd,GAAG,CAACe,IAAI,CAAC,iBAAiB,EAAE;EAAEF,KAAK;EAAEC;AAAS,CAAC,CAAC;AAC1F,OAAO,MAAME,QAAQ,GAAGA,CAACC,QAAQ,EAAEJ,KAAK,EAAEC,QAAQ,KAAKd,GAAG,CAACe,IAAI,CAAC,oBAAoB,EAAE;EAAEE,QAAQ;EAAEJ,KAAK;EAAEC;AAAS,CAAC,CAAC;AACpH,OAAO,MAAMI,WAAW,GAAIC,QAAQ,IAAKnB,GAAG,CAACe,IAAI,CAAC,oBAAoB,EAAEI,QAAQ,CAAC;AACjF,OAAO,MAAMC,WAAW,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAKtB,GAAG,CAACuB,GAAG,CAAC,sBAAsBF,MAAM,SAASC,IAAI,EAAE,CAAC;AACjG,OAAO,MAAME,WAAW,GAAIC,EAAE,IAAK,GAAG1B,OAAO,sBAAsB0B,EAAE,EAAE;AACvE,OAAO,MAAMC,UAAU,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK5B,GAAG,CAACe,IAAI,CAAC,uBAAuB,EAAE;EAAEY,OAAO;EAAEC;AAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}