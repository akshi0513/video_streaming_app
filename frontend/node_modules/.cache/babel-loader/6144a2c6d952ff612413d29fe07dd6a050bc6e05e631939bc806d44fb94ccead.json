{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\video streaming App\\\\frontend\\\\src\\\\components\\\\VideoUpload.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { uploadVideo } from '../api';\nimport './VideoUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [form, setForm] = useState({\n    title: '',\n    description: '',\n    tags: ''\n  });\n  const [loading, setLoading] = useState(false); // Loading state for upload\n  const [error, setError] = useState(null); // Error state for handling errors\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    setLoading(true); // Start the loading state\n    setError(null); // Clear any previous errors\n\n    const formData = new FormData();\n    formData.append('video', file); // Video field must match the backend field name\n    formData.append('title', form.title);\n    formData.append('description', form.description);\n    formData.append('tags', form.tags);\n    try {\n      await uploadVideo(formData); // Call the API function to upload video\n      alert('Video uploaded successfully!');\n\n      // Clear the form and file after successful upload\n      setForm({\n        title: '',\n        description: '',\n        tags: ''\n      });\n      setFile(null);\n      document.getElementById('fileInput').value = ''; // Reset file input\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error uploading video:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n      setError('Failed to upload video. Please try again.');\n    } finally {\n      setLoading(false); // Stop the loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading... Please wait.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: form.title,\n        onChange: e => setForm({\n          ...form,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: form.description,\n        onChange: e => setForm({\n          ...form,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Tags (comma separated)\",\n        value: form.tags,\n        onChange: e => setForm({\n          ...form,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fileInput\",\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoUpload, \"BR21Zp0feVxmqOTWgVzxKh+VwsQ=\");\n_c = VideoUpload;\nexport default VideoUpload;\nvar _c;\n$RefreshReg$(_c, \"VideoUpload\");","map":{"version":3,"names":["useState","uploadVideo","jsxDEV","_jsxDEV","VideoUpload","_s","file","setFile","form","setForm","title","description","tags","loading","setLoading","error","setError","handleUpload","e","preventDefault","alert","formData","FormData","append","document","getElementById","value","_error$response","_error$response$data","console","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","target","id","accept","files","disabled","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/components/VideoUpload.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { uploadVideo } from '../api';\r\nimport './VideoUpload.css';\r\n\r\nconst VideoUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [form, setForm] = useState({ title: '', description: '', tags: '' });\r\n  const [loading, setLoading] = useState(false); // Loading state for upload\r\n  const [error, setError] = useState(null);     // Error state for handling errors\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!file) {\r\n      alert('Please select a file.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);  // Start the loading state\r\n    setError(null);    // Clear any previous errors\r\n\r\n    const formData = new FormData();\r\n    formData.append('video', file); // Video field must match the backend field name\r\n    formData.append('title', form.title);\r\n    formData.append('description', form.description);\r\n    formData.append('tags', form.tags);\r\n\r\n    try {\r\n      await uploadVideo(formData); // Call the API function to upload video\r\n      alert('Video uploaded successfully!');\r\n      \r\n      // Clear the form and file after successful upload\r\n      setForm({ title: '', description: '', tags: '' });\r\n      setFile(null);\r\n      document.getElementById('fileInput').value = ''; // Reset file input\r\n    } catch (error) {\r\n      console.error('Error uploading video:', error.response?.data?.error || error.message);\r\n      setError('Failed to upload video. Please try again.');\r\n    } finally {\r\n      setLoading(false);  // Stop the loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Upload Video</h2>\r\n      {loading && <p>Uploading... Please wait.</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleUpload}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Title\" \r\n          value={form.title} \r\n          onChange={(e) => setForm({ ...form, title: e.target.value })} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Description\" \r\n          value={form.description} \r\n          onChange={(e) => setForm({ ...form, description: e.target.value })} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Tags (comma separated)\" \r\n          value={form.tags} \r\n          onChange={(e) => setForm({ ...form, tags: e.target.value })} \r\n        />\r\n        <input \r\n          id=\"fileInput\" \r\n          type=\"file\" \r\n          accept=\"video/*\" \r\n          onChange={(e) => setFile(e.target.files[0])} \r\n        />\r\n        <button type=\"submit\" disabled={loading}>Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}  \r\n\r\nexport default VideoUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}