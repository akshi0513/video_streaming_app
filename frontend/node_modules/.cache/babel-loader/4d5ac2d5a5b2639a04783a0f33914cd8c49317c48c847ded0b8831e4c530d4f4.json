{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Desktop\\\\video streaming App\\\\frontend\\\\src\\\\components\\\\VideoList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { fetchVideos } from '../api';\nimport { Link } from 'react-router-dom';\nimport './VideoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoList = () => {\n  _s();\n  const [videos, setVideos] = useState([]); // Initialize videos as an empty array\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    const loadVideos = async () => {\n      try {\n        const response = await fetchVideos(search, page);\n\n        // Safeguard: Ensure that response.data.videos is an array\n        const videoList = response.data.videos || []; // If undefined, set it to an empty array\n        setVideos(videoList); // Ensure the response has data before updating the state\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n        setVideos([]); // In case of error, set an empty array\n      }\n    };\n    loadVideos();\n  }, [search, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Video List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search videos...\",\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: videos.length > 0 ? videos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/videos/${video._id}`,\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)\n      }, video._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No videos found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page - 1),\n      disabled: page === 1,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPage(page + 1),\n      disabled: videos.length === 0,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoList, \"JPNLrzNsA4a0FGY55By92UJ4Bb8=\");\n_c = VideoList;\nexport default VideoList;\nvar _c;\n$RefreshReg$(_c, \"VideoList\");","map":{"version":3,"names":["useState","useEffect","fetchVideos","Link","jsxDEV","_jsxDEV","VideoList","_s","videos","setVideos","search","setSearch","page","setPage","loadVideos","response","videoList","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","length","map","video","to","_id","title","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/akshi/OneDrive/Desktop/video streaming App/frontend/src/components/VideoList.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { fetchVideos } from '../api';\r\nimport { Link } from 'react-router-dom';\r\nimport './VideoList.css';\r\n\r\nconst VideoList = () => {\r\n  const [videos, setVideos] = useState([]); // Initialize videos as an empty array\r\n  const [search, setSearch] = useState('');\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const loadVideos = async () => {\r\n      try {\r\n        const response = await fetchVideos(search, page);\r\n\r\n        // Safeguard: Ensure that response.data.videos is an array\r\n        const videoList = response.data.videos || []; // If undefined, set it to an empty array\r\n        setVideos(videoList); // Ensure the response has data before updating the state\r\n      } catch (error) {\r\n        console.error('Error fetching videos:', error);\r\n        setVideos([]); // In case of error, set an empty array\r\n      }\r\n    };\r\n\r\n    loadVideos();\r\n  }, [search, page]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Video List</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search videos...\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <ul>\r\n        {videos.length > 0 ? (\r\n          videos.map((video) => (\r\n            <li key={video._id}>\r\n              <Link to={`/videos/${video._id}`}>{video.title}</Link>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No videos found.</p>\r\n        )}\r\n      </ul>\r\n      <button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n        Previous\r\n      </button>\r\n      <button onClick={() => setPage(page + 1)} disabled={videos.length === 0}>\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}